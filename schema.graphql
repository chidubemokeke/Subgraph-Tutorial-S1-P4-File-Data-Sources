type Account @entity {
  id: ID!
  buyCount: BigInt
  sellCount: BigInt
  mintCount: BigInt
  totalBalance: BigInt
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  nfts: [NFT!]! @derivedFrom(field: "currentOwner") # All NFTs owned by Account
  transfers: [Transfer!]! @derivedFrom(field: "account")
}

type Transfer @entity {
  id: ID!
  account: Account!
  from: Bytes! # address of sender
  to: Bytes! # address of receiver
  tokenId: BigInt! # uint256
  transferCount: BigInt!
  buyer: Bytes
  seller: Bytes
  isSale: Boolean
  isMint: Boolean
  amountSold: BigInt
  blockNumber: BigInt!
  blockTimestamp: BigInt!
}

type NFT @entity {
  id: ID!
  currentOwner: Account!
  tokenID: BigInt!
  tokenURI: String!
  ipfsURI: NFTMetadata
  firstOwner: Bytes!
  saleCount: BigInt!
  buyCount: BigInt!
  blockTimestamp: BigInt!
  blockNumber: BigInt!
}

type NFTMetadata @entity {
  id: ID!
  description: String!
  externalURL: String
  image: String!
  name: String!
  type: String!
  sun: String!
  moon: String!
  rising: String!
}

type _Schema_
  @fulltext(
    name: "covenSearch"
    language: en
    algorithm: rank
    include: [
      {
        entity: "NFTMetadata"
        fields: [
          { name: "name" }
          { name: "description" }
          { name: "type" }
          { name: "sun" }
          { name: "moon" }
          { name: "rising" }
        ]
      }
    ]
  )

type Transfer @entity(immutable: true) {
  id: ID!
  account: Account! @derivedFrom(field: "transfers")
  from: Bytes! # address of sender
  to: Bytes! # address of receiver
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Account @entity {
  id: ID!
  sendCount: Int!
  receiveCount: Int!
  totalTransferredOut: BigInt!
  totalReceived: BigInt!
  totalBalance: BigInt!
  nfts: [NFT!]! @derivedFrom(field: "owner")
  transfers: [Transfer!]! @derivedFrom(field: "account")
  createdAt: BigInt! @index
}

type NFT @entity {
  id: ID!
  owner: Account!
  tokenID: BigInt!
  tokenURI: String!
  externalURL: String
  ipfsURI: String
  updatedAtTimestamp: BigInt! @index
  metadata: NFTMetadata @derivedFrom(field: "nft")
}

type NFTMetadata @entity {
  id: ID!
  image: String!
  name: String!
  description: String!
  type: String!
  sun: String!
  moon: String!
  rising: String!
  nft: NFT! @derivedFrom(field: "metadata")
}

type _Schema_
  @fulltext(
    name: "covenSearch"
    language: en
    algorithm: rank
    include: [
      {
        entity: "NFTMetadata"
        fields: [
          { name: "name" }
          { name: "description" }
          { name: "type" }
          { name: "sun" }
          { name: "moon" }
          { name: "rising" }
        ]
      }
    ]
  )
